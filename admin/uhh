fetch("/kranen.json")
    .then((response) => response.json())
    .then((data) => {
        const resetButton = document.getElementById("reset");
        resetButton.addEventListener("click", function () {
            localStorage.removeItem("machines");
            const machineData = localStorage.getItem("machines");
            if (!machineData) {
                localStorage.setItem("machines", JSON.stringify(data));
            }
            window.location.reload();
        });
    });
const tableBody = document.getElementById("winkelwagen-body");
const machineTemplate = document.getElementById("machine-template").content;

if (localStorage.getItem("machines")) {
    const machines = JSON.parse(localStorage.getItem("machines"));

machines.forEach(function (machine) {
    const row = machineTemplate.cloneNode(true).querySelector("tr");

    row.querySelector(".id").textContent = machine.id;
    row.querySelector(".naam").textContent = machine.naam;
    row.querySelector(".prijs").textContent = machine.prijs;
    row.querySelector(".afbeelding").innerHTML = machine.foto;

    const editLink = row.querySelector(".edit-link");
    editLink.href = `../edit/index.html?id=${machine.id}`;

    const removeCell = row.querySelector(".remove-cell");
    removeCell.addEventListener("click", function () {
        row.remove();
        const index = machines.findIndex(function (item) {
            return item.id === machine.id;
        });
        if (index !== -1) {
            machines.splice(index, 1);
            localStorage.setItem("machines", JSON.stringify(machines));
        }
    });

    tableBody.appendChild(row);
});
}





function getProductsFromLocalStorage() {
    const storedProducts = localStorage.getItem('jsonData');
    return JSON.parse(storedProducts) || [];
}

function getProductsFromJSON(callback) {
    fetch('/home/product.json')
        .then((response) => response.json())
        .then((data) => callback(data))
        .catch((error) => console.error('Fout bij laden van JSON-bestand: ', error));
}

function removeItem(id) {
    const products = getProductsFromLocalStorage();
    const filteredProducts = products.filter((item) => item.id != id);
    localStorage.setItem('jsonData', JSON.stringify(filteredProducts));
}

function displayProducts() {
    const products = getProductsFromLocalStorage();
    const productList = document.getElementById('products');
    productList.innerHTML = '';
    products.forEach((product) => {
        const listItem = document.createElement('li');
        listItem.textContent = product.name;
        listItem.id = product.id;
        listItem.addEventListener('click', (event) => {
            removeItem(event.target.id);
            displayProducts();
        });
        productList.appendChild(listItem);
    });
}

const localProducts = getProductsFromLocalStorage();

if (localProducts.length > 0) {
    displayProducts();
} else {
    getProductsFromJSON((products) => {
        localStorage.setItem('jsonData', JSON.stringify(products));
        displayProducts();
    });
}

